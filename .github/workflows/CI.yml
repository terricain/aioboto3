name: CI

on:
  push:
    branches:
      - '*'
    tags:
      - '*'
  pull_request:
    branches:
      - 'main'

jobs:
  build:
    name: Build distribution 📦
    runs-on: ubuntu-24.04
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v5
      - name: Install uv
        uses: astral-sh/setup-uv@v6
      - name: Build distribution 📦
        run: uv build
      - name: Check distribution 📦
        run: uvx twine check --strict dist/*
      - name: Upload distribution 📦
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

  test:
    name: Test Python ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      matrix:
        python-version:
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"
          - "3.13"
          # - "3.14"  # Disabled until moto[server] updates its dependencies so that pydantic rust parts stop erroring.
          # pydantic-core` (v2.33.2) <-  `pydantic` (v2.11.7) <- `aws-sam-translator` (v1.99.0) <- `cfn-lint` (v1.38.3) <- `moto[server]` (v5.1.10)
        os:
          - ubuntu-24.04
          - ubuntu-24.04-arm
        include:
          - experimental: false
          - experimental: true
            os: ubuntu-24.04-arm  # deal with flaky runners
          - upload-coverage: false
          - upload-coverage: true
            python-version: 3.11
            os: ubuntu-24.04
      fail-fast: false
    env:
      UV_FROZEN: 1
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          submodules: true
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          python-version: ${{ matrix.python-version }}
      - name: Run unittests
        env:
          COLOR: 'yes'
        run: |
          uv run pytest

  check:  # This job does nothing and is only used for the branch protection
    if: always()
    needs:
      - build
      - test
    runs-on: ubuntu-24.04
    timeout-minutes: 5

    steps:
      - name: Decide whether the needed jobs succeeded or failed
        uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}

  publish:
    name: Publish Python 🐍 distribution 📦 to PyPI
    if: github.ref_type == 'tag'
    needs:
      - check
    runs-on: ubuntu-24.04
    environment:
      name: pypi
      url: https://pypi.org/project/aioboto3/${{ github.ref_name }}
    permissions:
      id-token: write
    timeout-minutes: 5
    steps:
      - name: Download distribution 📦
        uses: actions/download-artifact@v5
        with:
          name: python-package-distributions
          path: dist/
      - name: Check if distribution 📦 names match git tag
        run: |
          VERSION=${GITHUB_REF_NAME#v}  # This removes the 'v' from the tag
          test -f "dist/aioboto3-${VERSION}.tar.gz"
          test -f "dist/aioboto3-${VERSION}-py3-none-any.whl"
      - name: Publish distribution 📦 to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
